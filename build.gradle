buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.+'
	}
}

plugins {
	id "org.sonarqube" version "2.0.1"
}

/**
 * Get the name of the working branch of the project
 *
 * @return Name of the working branch
 */
def getWorkingBranch() {
	// Triple double-quotes for the breaklines
	def workingBranch = """git --git-dir=${rootDir}/../.git
							--work-tree=${rootDir}/..
							rev-parse --abbrev-ref HEAD""".execute().text.trim()
	print "Working branch: " + workingBranch
	return workingBranch
}

sonarqube {
	properties {
		property "sonar.projectName", "Java :: OWN :: OWN Server"
		property "sonar.projectKey", "org.programmatori.domotica.own:" + getWorkingBranch()
//		property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
	}
}

apply plugin: 'com.github.ben-manes.versions'

subprojects {
	apply plugin: 'java'
	apply plugin: 'eclipse'

	repositories {
		mavenLocal()
		jcenter()
		mavenCentral()
	}

	dependencies {
		// Log of each module
		compile 'org.slf4j:slf4j-api:1.6.+'
		runtime 'ch.qos.logback:logback-classic:1.1.+'

		// Test
		testCompile group: 'junit', name: 'junit', version: '4.+'
	}

	sourceCompatibility = 1.6
}